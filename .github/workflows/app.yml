name: Flask App CI/CD

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch: # Allow manual triggering of the workflow

concurrency:
  group: "flask-deployment"
  cancel-in-progress: false

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.9
  FLASK_APP: app.py

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Install dependencies
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Run the Flask app for testing
      - name: Run Flask app
        run: |
          python -m flask run --host=0.0.0.0 --port=8080 &
          sleep 10
          curl -f http://127.0.0.1:8080

  deploy:
    needs: build  # Deploy job depends on the build job

    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Prepare deployment artifacts (e.g., zip files)
      - name: Package Flask App
        run: |
          zip -r flask_app.zip ./*
          echo "Application packaged for deployment."

      # Upload deployment artifact (Optional, for debugging or downloading)
      - name: Upload Deployment Artifact
        uses: actions/upload-artifact@v3
        with:
          name: flask-app
          path: flask_app.zip

      # Deployment instructions
      - name: Deployment Instructions
        run: |
          echo "Deployment job completed. Please download the artifact and manually deploy to the server."
